name: Ktor CI/CD

on:
  push:
    branches: [main]
  pull_request:

jobs:

  build:
    name: 🔧 Build
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🛠 Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: ✅ Make gradlew executable
        run: chmod +x ./gradlew

      - name: 🧪 Build app
        run: ./gradlew clean shadowJar --no-daemon

      - name: 📦 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ktor-app
          path: build/libs/*.jar

  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres:15
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🧪 Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: ✅ Make gradlew executable
        run: chmod +x ./gradlew

      - name: 📄 Generate .env from template
        run: |
          cp .env.template .env
          sed -i "s|\$MEXC_API_KEY|${{ secrets.MEXC_API_KEY }}|g" .env
          sed -i "s|\$MEXC_SECRET_KEY|${{ secrets.MEXC_SECRET_KEY }}|g" .env
          sed -i "s|\$DB_HOST|postgres|g" .env
          sed -i "s|\$DB_PORT|5432|g" .env
          sed -i "s|\$DB_NAME|${{ secrets.DB_NAME }}|g" .env
          sed -i "s|\$DB_USER|${{ secrets.DB_USER }}|g" .env
          sed -i "s|\$DB_PASSWORD|${{ secrets.DB_PASSWORD }}|g" .env

      - name: 🧪 Run tests
        run: ./gradlew test --no-daemon

  deploy:
    name: 🚀 Deploy to Server
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Download JAR
        uses: actions/download-artifact@v4
        with:
          name: ktor-app
          path: .

      - name: 🔐 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: 📄 Generate .env
        run: |
          echo "MEXC_API_KEY=${{ secrets.MEXC_API_KEY }}" >> .env
          echo "MEXC_SECRET_KEY=${{ secrets.MEXC_SECRET_KEY }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - name: 📤 Copy files to server
        run: |
          scp -i ~/.ssh/deploy_key build/libs/*.jar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/my-ktor-project/app.jar
          scp -i ~/.ssh/deploy_key .env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/my-ktor-project/.env
          scp -i ~/.ssh/deploy_key docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/my-ktor-project/docker-compose.yml

      - name: 🚀 SSH Deploy
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd ~/my-ktor-project

            echo "🛑 Останавливаем старые контейнеры"
            docker-compose down

            echo "🚀 Запускаем новые контейнеры"
            docker-compose up -d --build
          EOF
