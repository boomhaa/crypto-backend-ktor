name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    name: 🔨 Build
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🔐 Set permissions for gradlew
        run: chmod +x ./gradlew

      - name: 🔨 Build shadowJar
        run: ./gradlew clean shadowJar --no-daemon

      - name: 📤 Upload jar
        uses: actions/upload-artifact@v4
        with:
          name: ktor-app
          path: build/libs/*.jar

  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🔐 Set permissions for gradlew
        run: chmod +x ./gradlew

      - name: 📄 Generate .env for tests
        run: |
          cp .env.template .env
          sed -i "s|\$MEXC_API_KEY|${{ secrets.MEXC_API_KEY }}|g" .env
          sed -i "s|\$MEXC_SECRET_KEY|${{ secrets.MEXC_SECRET_KEY }}|g" .env
          sed -i "s|\$DB_HOST|${{ secrets.DB_HOST }}|g" .env
          sed -i "s|\$DB_PORT|${{ secrets.DB_PORT }}|g" .env
          sed -i "s|\$DB_NAME|${{ secrets.DB_NAME }}|g" .env
          sed -i "s|\$DB_USER|${{ secrets.DB_USER }}|g" .env
          sed -i "s|\$DB_PASSWORD|${{ secrets.DB_PASSWORD }}|g" .env

      - name: 🧪 Run tests
        run: ./gradlew test --no-daemon

  deploy:
    name: 🚀 Deploy to server
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ktor-app
          path: build/libs

      - name: 📄 Generate .env for deployment
        run: |
          cp .env.template .env
          sed -i "s|\$MEXC_API_KEY|${{ secrets.MEXC_API_KEY }}|g" .env
          sed -i "s|\$MEXC_SECRET_KEY|${{ secrets.MEXC_SECRET_KEY }}|g" .env
          sed -i "s|\$DB_HOST|${{ secrets.DB_HOST }}|g" .env
          sed -i "s|\$DB_PORT|${{ secrets.DB_PORT }}|g" .env
          sed -i "s|\$DB_NAME|${{ secrets.DB_NAME }}|g" .env
          sed -i "s|\$DB_USER|${{ secrets.DB_USER }}|g" .env
          sed -i "s|\$DB_PASSWORD|${{ secrets.DB_PASSWORD }}|g" .env

      - name: 🔑 Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 📤 Upload files to server
        run: |
          scp -o StrictHostKeyChecking=no -r \
            build/libs/*.jar \
            .env \
            Dockerfile \
            docker-compose.yml \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/crypto-backend-ktor/

      - name: 🚀 SSH Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            set -e
            cd ~/crypto-backend-ktor

            echo "📦 Creating volume if not exists"
            docker volume create pgdata

            echo "🛑 Stopping old containers"
            docker-compose down

            echo "🚀 Starting new containers"
            docker-compose up -d --build
          EOF
